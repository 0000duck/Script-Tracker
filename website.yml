script_tracker_web_page:
  type: world
  debug: false
  events:
    on get request:
    - if <context.request.starts_with[/tracker]> queue clear
    - determine passively "code:200"  
    - determine passively "type:text/html"
    - choose <context.request.after[/]||none>:
      - case popular:
        - inject s@script_tracker_web_page_popular
      - case script:
        - inject s@script_tracker_web_page_script
      - default:
        - inject s@script_tracker_web_page_homepage





website_pages:
  type: yaml data
  search_bar: |
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
        <style>
            body {
                min-height<{&co}> 2000px;
                padding-top<{&co}> 70px;
            }
        </style>
        <script>
            function dosearch() {
                script = document.getElementById("scriptsearch").value;
                if (script == "") {
                    alert("No script specified!");
                    return;
                }
                query = "?script=" + script;
                window.location.replace("/script" + query);
            }
        </script>
        <nav class="navbar navbar-default navbar-fixed-top">
            <div class="container">
                <div id="navbar" class="navbar-collapse collapse">
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="col-md-6">
                            <input class="form-control" type="text" id="scriptsearch" placeholder="Enter Script">
                        </div>
                        <div class="col-md-2">
                            <input class="btn btn-primary" id="dosearch" type="button" value="Search" onclick="dosearch()">
                        </div>
                        <div class="col-md-2"></div>
                    </div>
                </div>
            </div>
        </nav>
  homepage: |
      <!doctype html>
      <html>
          <head>
              <title>
              Script Tracker
              </title>
          </head>
          <body>
            <{def[searchbar]}>
          </body>
      </html>
  scriptpage: |
      <!doctype html>
      <html>
          <head>
              <title>
              Script Tracker
              </title>
          </head>
          <body>
              <{def[searchbar]}><br>
              <p>
              Script<{&co}> <{def[title]}><br>
              Author<{&co}> <{def[author]}><br>
              Public data<{&co}> <{def[public_data]}><br>
              </p>
              <img src='url1'>
          </body>
      </html>
  404page: |
      <!doctype html>
      <html>
          <head>
              <title>
              Script Tracker
              </title>
          </head>
          <body>
              <{def[searchbar]}>
              Mate you typed something wrong there, try again yo
          </body>
      </html>
  popularpage: |
        <!doctype html>
        <html>
            <head>
                <title>
                    Script Tracker
                </title>
                <link rel="stylesheet" href="https<{&co}>//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
            </head>
            <body>
                <div class="container" style="margin-top<{&co}> 30px">
                    <div class="row">
                        <div class="col-md-8 col-md-offset-2">
                            <table class="table table-bordered table-condensed data-table table-striped" id="script-list">
                                <thead>
                                <tr>
                                    <th class="text-center">Rank</th>
                                    <th class="text-center">Script</th>
                                    <th class="text-center">Servers</th>
                                </tr>
                                </thead>
                                <tbody>
                                    <{def[table_contents]}>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </body>
        </html>
  popular_table_row: |
    <tr id="script-list-item"> <td style="text-align<{&co}> center;"><b><{def[rank]}></b> </td> <td style="text-align<{&co}> center;"> <a href="/script?script=<{def[ID]}>" target="_blank"><b><{def[script]}></b></a> </td> <td style="text-align<{&co}> center;"> <b><{def[servers]}></b> </td> </tr>

  
  
script_tracker_web_page_popular:
  type: task
  debug: false
  script:
  - define page <s@website_pages.yaml_key[search_bar]>
  - inject s@parse_tags_in_html
  - define searchbar <def[page]>
  - define table_contents ""
  - foreach <proc[popular_scripts_by_id]>:
    - define ID <def[value].after[/].substring[1,50].unescaped>
    - define script <yaml[scripttable].read[script_tracker.scriptinfo.<def[ID]>.name].unescaped||<def[value]>>"
    - define servers <def[value].before[/]>
    - define rank <def[loop_index]>
    - define page <s@website_pages.yaml_key[popular_table_row]>
    - inject s@parse_tags_in_html
    - define table_contents "<def[table_contents]><def[page]>"
  - define page <s@website_pages.yaml_key[popularpage]>
  - inject s@parse_tags_in_html
  - determine "<def[page]>"




script_tracker_web_page_homepage:
  type: task
  debug: false
  script:
  - define page <s@website_pages.yaml_key[search_bar]>
  - inject s@parse_tags_in_html
  - define searchbar <def[page]>
  - define page <s@website_pages.yaml_key[homepage]>
  - inject s@parse_tags_in_html
  - determine "<def[page]>"





script_tracker_web_page_script:
  type: task
  debug: false
  script:
  #
    # get all the date from the query
    #
    - define query <context.query.split_by[&]>
    - define script <def[query].map_get[script].split_by[=].replace[<&pc>20].with[<&sp>]||none>
    - define scriptdata <proc[script_info].context[<def[script]>]>
    - if <def[scriptdata].get[1]||null> == null {
      - define page <s@website_pages.yaml_key[search_bar]>
      - inject s@parse_tags_in_html
      - define searchbar <def[page]>
      - define page <s@website_pages.yaml_key[404page]>
      - inject s@parse_tags_in_html
      - determine <def[page]>
      }
    - define script <def[scriptdata].get[5]>
    - define title <def[scriptdata].get[1]>
    - define author <def[scriptdata].get[2]>
    - define public_data <def[scriptdata].get[6]||null>
    - define public_data <def[public_data].formatted||none>
    - define days <def[query].map_get[days].split_by[=]||10>
    - define data <def[query].map_get[data].split_by[=]||script>
    - define mode <def[query].map_get[mode].split_by[=]||add>
    - define datavalue <def[query].map_get[datavalue].split_by[=]||none>
    #
    #get a list of duration stamps that represent the log files requested
    #
    - define timestamp <util.date.time.duration.sub[d@<util.date.time.hour>h].sub[d@<util.date.time.minute>m].sub[d@<util.date.time.second>s]>
    - define filelist li@<def[timestamp].in_ticks>
    - repeat <def[days].sub[1].as_int>:
      - define newtimestamp <def[timestamp].sub[d@<def[value]>d].in_ticks>
      - define filelist <def[filelist].include[<def[newtimestamp]>]>
    - define filelist <def[filelist].reverse>
    #
    # get the data in a list
    #
    - define presented_data li@
    - foreach <def[filelist]>:
      - define currentfile <def[value]>
      - if <yaml.list.contains[<def[currentfile]>].not> {
        - if <server.has_file[/script_tracker/<def[currentfile]>.yml]> {
          - yaml "load:/script_tracker/<def[currentfile]>.yml" id:<def[currentfile]>
          } else {
          - define presented_data <def[presented_data].include[li@0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0]>
          # - debug error "could not find <def[currentfile]>"
          - foreach next
          }
        }
      - repeat 24:
        - define hour <def[value].sub[1].as_int>
        - if <def[mode]> == add {
          - if <def[data]> == script {
            - define amount <yaml[<def[currentfile]>].list_keys[data.<def[hour]>.<def[script]>].size||0>
            } else {
            - define amount 0
            - foreach <yaml[<def[currentfile]>].list_keys[data.<def[hour]>.<def[script]>]||li@> {
              - if <def[datavalue]> == none {
                - define amount <def[amount].add[<yaml[<def[currentfile]>].read[data.<def[hour]>.<def[script]>.<def[value]>.<def[data]>].unescaped||0>].as_int||0>
                } else {
                - define currentdatavalue <yaml[<def[currentfile]>].read[data.<def[hour]>.<def[script]>.<def[value]>.<def[data]>].unescaped||0>
                - if <def[datavalue]> == <def[currentdatavalue]> {
                  - define amount <def[amount].add[1].as_int||0>
                  }
                }
              }
            }
          - define presented_data <def[presented_data].include[<def[amount]>]>
          }
    # generate labels for the graph
    - define labels "Future,Today"
    - repeat <def[days].sub[1].as_int> {
      - define duration <util.date.time.duration.sub[<el@val[86400].mul[%value%]>]>
      - define labels "%labels%,<def[duration].time.day>/<def[duration].time.month>"
      }
    - define page <s@website_pages.yaml_key[search_bar]>
    - inject s@parse_tags_in_html
    - define searchbar <def[page]>
    # send page
    - define page <s@website_pages.yaml_key[scriptpage]>
    - inject s@parse_tags_in_html
    - define highest <def[presented_data].numerical.last.max[1].as_int||1>
    - define max <el@10.power[<def[highest].as_int.length>].as_int>
    - determine "<def[page].replace[url1].with[http<&co>//neo.mcmonkey.org/graph_api/graph_line.png?title=<def[title]>&show_points=false&width=1000&Height=500&xtitle=Days&ytitle=Amount&ynotches=<def[max].div[10].max[1].round||1>&xnotches=1&xsteps=0.04166&max=<def[max]>&values=<def[presented_data].separated_by[,]>&xend=<def[days]>&xstart=0&match_xsteps=true&xlabels=%labels%]>"





parse_tags_in_html:
  type: task
  debug: false
  script:
  - define page <def[page].escaped||null>
  - define page <parse:<def[page].replace[&lt<&lc>].with[<&lt>].replace[<&rc>&gt].with[<&gt>].replace[&dot].with[.].replace[&sc].with[<&sc>].replace[&amp].with[&].replace[&at].with[<&at>].replace[&lb].with[<&lb>].replace[&rb].with[<&rb>].replace[&pipe].with[<&pipe>]||null>>
  - define page <def[page].unescaped||null>